apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: spark-streaming-example
spec:
  sparkConf:
    "spark.jars.ivy": "/tmp/.ivy"
    spark.ui.prometheus.enabled: "true"
    spark.executor.processTreeMetrics.enabled: "true"
    spark.metrics.conf: "/etc/metrics/conf/metrics.properties"
    "spark.kubernetes.submission.connectionTimeout": "60000000"
    "spark.kubernetes.submission.requestTimeout": "60000000"
    "spark.kubernetes.driver.connectionTimeout": "60000000"
    "spark.kubernetes.driver.requestTimeout": "60000000"
  type: Scala
  mode: cluster
  image: "ghcr.io/netcracker/qubership-spark-sample-apps-spark-streaming-word-count:main"
  imagePullPolicy: Always
  mainClass: com.qubership.spark.app.sample.JavaDirectKafkaWordCount
  mainApplicationFile: "local:///opt/spark/examples/spark-streaming-1.0-SNAPSHOT-jar-with-dependencies.jar"
  sparkVersion: "3.5.3"
  restartPolicy:
    type: Never
  driver:
    configMaps:
      - name: metricspropertiesconfigmap
        path: /etc/metrics/conf
    cores: 1
    coreLimit: "1200m"
    memory: "512m"
    labels:
      version: 3.5.3
    serviceAccount: sparkapps-sa
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      capabilities:
        drop:
          - ALL
  executor:
    configMaps:
      - name: metricspropertiesconfigmap
        path: /etc/metrics/conf
    cores: 1
    instances: 1
    memory: "512m"
    labels:
      version: 3.5.3
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      capabilities:
        drop:
          - ALL